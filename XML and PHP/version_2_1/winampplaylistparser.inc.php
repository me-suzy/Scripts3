<?

//   *************************************************************
//   *                                                           *
//   *  Winamp Playlist Parser                                   *
//   *  © Dave Pusey 2004                                        *
//   *                                                           *
//   *  Version:      2.1                                        *
//   *                                                           *
//   *  Release Date: 3rd December 2004                          *
//   *                                                           *
//   *************************************************************
//   *                                                           *
//   * The Winamp Playlist Parser is a free open-source PHP      *
//   * script for parsing playlist files generated by Winamp     *
//   * into a HTML table for web publication.                    *
//   *                                                           *
//   * The only rule you must adhere to, when using this script, *
//   * is to leave this header block and the "Powered By" notice *
//   * intact.                                                   *
//   *                                                           *
//   * If you wish to find out more about this script, view the  *
//   * version history, make suggestions for new features,       *
//   * submit your own modifications, or report bugs, please     *
//   * visit:                                                    *
//   *                                                           *
//   * http://www.puseyuk.co.uk/portfolio/winampplaylistparser/  *
//   *                                                           *
//   *************************************************************



// **************************************************************************************************************************
//                                                         CONFIG
// **************************************************************************************************************************

// $FileName : Set this to filename of the playlist file.
$FileName = "playlist.m3u";

// $PlaylistType : Set this to either "B4S" or "M3U" depending on format of playlist file.
$PlaylistType = "M3U";


// **************************************************************************************************************************
//                                                        FUNCTIONS
// **************************************************************************************************************************




// THE FOLLOWING FUNCTIONS WERE BORROWED FROM http://www.devdump.com/phpxml.php
// ONLY ONE MODIFICATION MADE - ADDED <BR> TAGS TO printa OUTPUT - WITH HELP FROM Kris Zawadka.
// THANKS TO Kris Zawadka FOR WRITING THEM. VERY USEFUL!


function GetChildren($vals, &$i) 
{ 
  $children = array();     // Contains node data
  
  /* Node has CDATA before it's children */
  if (isset($vals[$i]['value'])) 
    $children['VALUE'] = $vals[$i]['value']; 
  
  /* Loop through children */
  while (++$i < count($vals))
  { 
    switch ($vals[$i]['type']) 
    { 
      /* Node has CDATA after one of it's children 
        (Add to cdata found before if this is the case) */
      case 'cdata': 
        if (isset($children['VALUE']))
          $children['VALUE'] .= $vals[$i]['value']; 
        else
          $children['VALUE'] = $vals[$i]['value']; 
        break;
      /* At end of current branch */ 
      case 'complete': 
        if (isset($vals[$i]['attributes'])) {
          $children[$vals[$i]['tag']][]['ATTRIBUTES'] = $vals[$i]['attributes'];
          $index = count($children[$vals[$i]['tag']])-1;

          if (isset($vals[$i]['value'])) 
            $children[$vals[$i]['tag']][$index]['VALUE'] = $vals[$i]['value']; 
          else
            $children[$vals[$i]['tag']][$index]['VALUE'] = ''; 
        } else {
          if (isset($vals[$i]['value'])) 
            $children[$vals[$i]['tag']][]['VALUE'] = $vals[$i]['value']; 
          else
            $children[$vals[$i]['tag']][]['VALUE'] = ''; 
		}
        break; 
      /* Node has more children */
      case 'open': 
        if (isset($vals[$i]['attributes'])) {
          $children[$vals[$i]['tag']][]['ATTRIBUTES'] = $vals[$i]['attributes'];
          $index = count($children[$vals[$i]['tag']])-1;
          $children[$vals[$i]['tag']][$index] = array_merge($children[$vals[$i]['tag']][$index],GetChildren($vals, $i));
        } else {
          $children[$vals[$i]['tag']][] = GetChildren($vals, $i);
        }
        break; 
      /* End of node, return collected data */
      case 'close': 
        return $children; 
    } 
  } 
} 

/* Function will attempt to open the xmlloc as a local file, on fail it will attempt to open it as a web link */
function GetXMLTree($xmlloc) 
{ 
  $data = file_get_contents($xmlloc); 

  $parser = xml_parser_create('ISO-8859-1');
  xml_parser_set_option($parser, XML_OPTION_SKIP_WHITE, 1); 
  xml_parse_into_struct($parser, $data, $vals, $index); 
  xml_parser_free($parser); 

  $tree = array(); 
  $i = 0; 
  
  if (isset($vals[$i]['attributes'])) {
	$tree[$vals[$i]['tag']][]['ATTRIBUTES'] = $vals[$i]['attributes']; 
	$index = count($tree[$vals[$i]['tag']])-1;
	$tree[$vals[$i]['tag']][$index] =  array_merge($tree[$vals[$i]['tag']][$index], GetChildren($vals, $i));
  }
  else
    $tree[$vals[$i]['tag']][] = GetChildren($vals, $i); 
  
  return $tree; 
} 


function printa($obj) {
  global $__level_deep;
  if (!isset($__level_deep)) $__level_deep = array();

  if (is_object($obj))
    print '[obj]<br>';
  elseif (is_array($obj)) {
    foreach(array_keys($obj) as $keys) {
      array_push($__level_deep, "[".$keys."]");
      printa($obj[$keys]);
      array_pop($__level_deep);
    }
  }
  else print implode(" ",$__level_deep)." = $obj<br>";
}







// END OF THIRD-PARTY FUNCTIONS. ALL FUNCTIONS BELOW WERE WRITTEN BY ME!


function CalcTime($millisecs)
{
	$secs = substr($millisecs, 0, strlen($millisecs)-3);

	$hours = floor($secs/60/60);
	$secs -= ($hours*60*60);

	$mins = floor($secs/60);
	$secs -= ($mins*60);

	$secs = $secs;

	$output = "";

	if ($hours > 0)
	{
		$output .= $hours . ":";
	}

	if ($mins < 10)
	{
		$output .= "0";
	}

	$output .= $mins . ":";

	if ($secs < 10)
	{
		$output .= "0";
	}

	$output .= $secs;

	return $output;
}







// **************************************************************************************************************************
//                                                        MAIN SCRIPT BODY
// **************************************************************************************************************************

if ($PlaylistType=="B4S")
{
  $out = GetXMLTree($FileName);

  $itemsitemsprocessed = 0;
  $itemcount = $out["WINAMPXML"][0]["PLAYLIST"][0]["ATTRIBUTES"]["NUM_ENTRIES"];

	$out2=$out["WINAMPXML"][0]["PLAYLIST"][0]["ENTRY"];

	foreach ($out2 as $v) {

		$itemsprocessed++;
		
		$songs[$itemsprocessed]["Name"] = $v["NAME"][0]["VALUE"];
		$songs[$itemsprocessed]["Length"] = $v["LENGTH"][0]["VALUE"];
		
	}
} else {

  $data = file_get_contents($FileName);
  $data = explode("\n",$data);
  
  foreach ($data as $v)
  {
	if (substr($v,0,8)=="#EXTINF:")
	{
		$tracknamestart = strpos ($v,",");

		$itemsprocessed++;
		
		$songs[$itemsprocessed]["Name"] = substr($v,$tracknamestart+1);
		$songs[$itemsprocessed]["Length"] = substr($v,8,$tracknamestart-2) * 1000;
	}
  }
}

echo "<table width=\"100%\" border=0 cellspacing=0 cellpadding=0>";

foreach ($songs as $song)
{
		echo "<tr>";

		echo "<td align=\"left\" valign=\"top\">" . $song["Name"] . "</td>";
		echo "<td width=\"60\" align=\"right\" valign=\"top\">" . CalcTime($song["Length"]) . "</td>";

		echo "</tr>";


}

echo "</table>";




// **************************************************************************************************************************
//                                                        "POWERED BY" NOTICE - DO NOT REMOVE!
// **************************************************************************************************************************

echo "<p>Powered by <a href=\"http://www.puseyuk.co.uk/portfolio/winamp/\" target=\"_blank\">Winamp Playlist Parser 2.10</a> © <a href=\"mailto:dave@puseyuk.co.uk\">Dave Pusey</a> " . date("Y") . ".</p>";


// **************************************************************************************************************************
//                                                        END OF SCRIPT
// **************************************************************************************************************************

?>